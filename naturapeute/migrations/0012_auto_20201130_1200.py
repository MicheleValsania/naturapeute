# Generated by Django 3.1.2 on 2020-11-30 12:00

from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields


def set_default_practice(apps, schema_editor):
    Practice = apps.get_model('naturapeute', 'Practice')
    (default_practice, _) = Practice.objects.get_or_create(name="Therapie", slug="therapie")
    Therapist = apps.get_model('naturapeute', 'Therapist')
    for therapist in Therapist.mixed.all():
        therapy = therapist.practices.first()
        if not therapy:
            therapy = default_practice
        therapist.practice = therapy
        therapist.practices.remove(therapy)
        therapist.save()


class Migration(migrations.Migration):

    dependencies = [
        ('naturapeute', '0011_auto_20201129_2107'),
    ]

    operations = [
        migrations.AddField(
            model_name='therapist',
            name='practice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='experts', to='naturapeute.practice', verbose_name='Pratique principale', null=True),
            preserve_default=False,
        ),
        migrations.RunPython(set_default_practice),
        migrations.AlterField(
            model_name='office',
            name='latlng',
            field=django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.DecimalField(decimal_places=10, max_digits=12), size=2),
        ),
        migrations.AlterField(
            model_name='therapist',
            name='practice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='experts', to='naturapeute.practice', verbose_name='Pratique principale', null=False),
        ),
        migrations.AlterField(
            model_name='therapist',
            name='practices',
            field=models.ManyToManyField(related_name='therapists', to='naturapeute.Practice', verbose_name='Autres pratiques'),
        ),
        migrations.AlterField(
            model_name='therapist',
            name='symptoms',
            field=models.ManyToManyField(blank=True, related_name='therapists', to='naturapeute.Symptom'),
        ),
    ]
